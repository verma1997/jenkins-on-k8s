apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins-master-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log", "persistentvolumeclaims"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins-rolebinding
subjects:
- kind: ServiceAccount
  name: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-master-role
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 3Gi
  accessModes:
    - ReadWriteOnce 
---
# apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
        - name: jenkin-master
          image: gcr.io/first-project-277206/jenkins:v1
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          securityContext:
              privileged: true
          volumeMounts:
            - name: jenkins-vol
              mountPath: /var/jenkins_home
            - name: docker-socket-volume
              mountPath: /var/run/docker.sock
      initContainers:  
        - name: increase-fd-ulimit
          image: busybox
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      volumes:
        - name: jenkins-vol
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: docker-socket-volume
          hostPath:
            path: /var/run/docker.sock
            type: File
---
# Service for accessing jenkins-UI
apiVersion: v1
kind: Service
metadata:
  name: jenkins
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
# Service for jenkins-agents
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: slavelistener
    - port: 8080
      targetPort: 8080
      name: slavemasterlistener
  selector:
    app: jenkins
---
# Jenkins images  can be used
# image: jenkins/jenkins 
# image: jenkinsci/blueocean
# image: jenkins/jenkins:2.176.3/2.204.1